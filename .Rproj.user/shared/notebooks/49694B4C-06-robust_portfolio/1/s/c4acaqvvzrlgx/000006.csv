"0","# define function (check: https://cvxr.rbind.io/post/cvxr_functions/)"
"0","portfolioGMVPRobustBox <- function(Sigma_lb, Sigma_ub) {"
"0","  N <- nrow(Sigma_lb)"
"0","  w <- Variable(N)"
"0","  Lambda_ub <- Variable(N, N)"
"0","  Lambda_lb <- Variable(N, N)"
"0","  prob <-"
"0","    Problem("
"0","      Minimize("
"0","        matrix_trace(Lambda_ub %*% Sigma_ub) - matrix_trace(Lambda_lb %*% Sigma_lb)"
"0","      ),"
"0","      constraints = list("
"0","        w >= 0,"
"0","        sum(w) == 1,"
"0","        Lambda_ub >= 0,"
"0","        Lambda_lb >= 0,"
"0","        bmat(list(list("
"0","          Lambda_ub - Lambda_lb, w"
"0","        ),"
"0","        list(t("
"0","          w"
"0","        ), 1))) == Variable(c(N + 1, N + 1), PSD=TRUE)"
"0","      )"
"0","    )"
"0","  result <- solve(prob)"
"0","  return(as.vector(result$getValue(w)))"
"0","}"
"0","# clairvoyant solution"
"0","w_GMVP <- GMVP(Sigma, long_only = TRUE)"
"0","names(w_GMVP) <- colnames(X)"
"0","w_all_GMVP_robust_box <- cbind(w_GMVP)"
"0",""
"0","# multiple robust solutions"
"0","delta <- 3"
"0","set.seed(357)"
"0","for (i in 1:6) {"
"0","  X_noisy <- rmvnorm(n = T, mean = mu, sigma = Sigma)"
"0","  mu_noisy <- colMeans(X_noisy)"
"0","  Sigma_noisy <- cov(X_noisy)"
"0","  "
"0","  Sigma_lb <- (1/delta)*Sigma_noisy"
"0","  #diag(Sigma_lb) <- diag(Sigma_noisy)"
"0","  Sigma_ub <- (1/delta)*Sigma_noisy"
"0","  diag(Sigma_ub) <- diag(Sigma_noisy)"
"0","  w_GMVP_robust_box_noisy <- portfolioGMVPRobustBox(Sigma_lb, Sigma_ub)"
"0","  w_all_GMVP_robust_box <- cbind(w_all_GMVP_robust_box, w_GMVP_robust_box_noisy)"
"0","}"
"0",""
"0","# plot to compare the allocations"
"0","barplot(t(w_all_GMVP_robust_box), col = rainbow8equal[1:7], legend = colnames(w_all_GMVP_robust_box), "
"0","        beside = TRUE, args.legend = list(bg = ""white"", x = ""topleft""),"
"0","        main = ""Robust (box) GMVP allocation"", xlab = ""stocks"", ylab = ""dollars"")"
