"0","portfolioMarkowitzRobust <- function(mu_hat, Sigma_hat, kappa, delta_, lmd = 0.5) {"
"0","  N <- length(mu_hat)"
"0","  S12 <- chol(Sigma_hat)  # t(S12) %*% S12 = Sigma"
"0","  w <- Variable(N)"
"0","  prob <- Problem(Maximize(t(w) %*% mu_hat - kappa*norm2(S12 %*% w) "
"0","                           - lmd*(norm2(S12 %*% w) + delta_*norm2(w))^2),"
"0","                  constraints = list(w >= 0, sum(w) == 1))"
"0","  result <- solve(prob)"
"0","  return(as.vector(result$getValue(w)))"
"0","}"
"0",""
"0","# clairvoyant solution"
"0","w_Markowitz <- MVP(mu, Sigma, long_only = TRUE)"
"0","names(w_Markowitz) <- colnames(X)"
"0","w_all_Markowitz_robust <- cbind(w_Markowitz)"
"0",""
"0","# multiple robust solutions"
"0","kappa <- 1.0"
"0","delta <- 0.1*sqrt(T)"
"0","set.seed(357)"
"0","for (i in 1:6) {"
"0","  X_noisy <- rmvnorm(n = T, mean = mu, sigma = Sigma)"
"0","  mu_noisy <- colMeans(X_noisy)"
"0","  Sigma_noisy <- cov(X_noisy)"
"0","  "
"0","  w_Markowitz_robust_noisy <- portfolioMarkowitzRobust(mu_noisy, Sigma_noisy, kappa, delta/sqrt(T-1))"
"0","  w_all_Markowitz_robust <- cbind(w_all_Markowitz_robust, w_Markowitz_robust_noisy)"
"0","}"
"0",""
"0","# plot to compare the allocations"
"0","barplot(t(w_all_Markowitz_robust), col = rainbow8equal[1:7], legend = colnames(w_all_Markowitz_robust), "
"0","        beside = TRUE, args.legend = list(bg = ""white"", x = ""topleft""),"
"0","        main = ""Robust Markowitz portfolio allocation"", xlab = ""stocks"", ylab = ""dollars"")"
